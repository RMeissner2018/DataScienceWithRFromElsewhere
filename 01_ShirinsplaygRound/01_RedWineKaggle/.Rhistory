# main file
# load mushroom data
# display connection between certain features and others, e.g. poisonnous?
# Attempt first machine learning things, like:
#
#
######
# Tasks:
# 1) load data and plot the occurency for each measure (hist) --> how many versions of each category are there?
# 2) Plot each category with respect to edibility -- which category has the highest agreement with the mushroom being edible?
# 3) If was collecting mushrooms --> which cateogry would I notice the most and how does that depend on edibility?
#       e.g. capshape, capcolor, habitat, ...
#       Basically correlate these by ??? mmmh, linear regression would be difficult.
# 4) Check the book Data Science for Business and repeat the measures performed there
#####
#load data
# Data source: https://archive.ics.uci.edu/ml/datasets/Mushroom
# set current working directory
setwd("D:/Programming/05_R/00_Coding/01_Mushroom")
# read data
dat = read.csv("agaricus-lepiota.data", header = FALSE)
# strangely, dat has 23 columns, but only 22 are mentioned. The 1st column is only p and e - could this be the poison question?
colnames(dat) <- c("Edible","capshape", "capsurface","capcolor","bruises","odor","gillattachment","gillspacing",
"gillsize","gillcolor","stalkshape","stalkroot","stalksurfaceabovering","stalksurfacebelowring",
"stalkcolorabovering","stalkcolorbelowring","veiltype","veilcolor","ringnumber","ringtype",
"sporeprintcolor","population","habitat")
# convert variables from char to numeric
mode(dat$capshape)
class(dat$capshape)
# as.numeric(as.character(dat$capshape))
# convert to numeric
# dat$Edible <- as.numeric(dat$Edible)
# dat$capshape <- as.numeric(dat$capshape)
# dat$habitat <- as.numeric(dat$habitat)
# dat$capcolor <- as.numeric(dat$capcolor)
# dat$odor <- as.numeric(dat$odor)
# dat$population <- as.numeric(dat$population)
iNrColumn <- length(dat[1,])
for (iterVal in 1:iNrColumn) {
dat[,iterVal] <- as.numeric(dat[,iterVal])
}
dat <- as.numeric(dat)
#####
# plot
# first plotting
require(ggplot2)
require(reshape2)
# function performing histogram plots
# takes dat data.frame and makes histograms
# ----------------------------------------------
source("fMushroomPlotHist.R")
fMushroomPlotHist(dat)
# ----------------------------------------------
# test plots
plot(dat$capshape,dat$capsurface)
plot(dat$capshape,dat$capcolor)
# plot on same grid, each series colored differently --
# good if the series have same scale
# ggplot(df, aes(time,value)) + geom_line(aes(colour = series))
# ggplot(aXPlot, dat[,1])
ggplot(aes(aXPlot, dat[,1]))
# or plot on different plots
ggplot(df, aes(time,value)) + geom_line() + facet_grid(series ~ .)
ds <- data.frame(x = dat$Edible,
y = dat$capshape)
# Use the fill aesthetic to specify the fill color for the bars
ggplot(ds, aes(x, y))
ggplot(ds, aes(dat$Edible, dat$capshape))
plot(dat$Edible, dat$capshape)
plot.ts(dat[,1:2])
# plot.ts(dat[,1:10])
# try to compare different aspects with edibility
plot(dat$Edible,dat$capsurface)
plot(dat$Edible,dat$capcolor)
# ----------------------------------------------
# Entropy calculation
#
# According to the book, the entropy should be 0.96 for the whole sample
source("fMushroomShannonEntropy.R")
aEntropy <- array(dim = iNrColumn)
for (iterVal in 1:iNrColumn) {
aEntropy[iterVal] <- sum(fMushroomShannonEntropy(dat[,iterVal]))
}
fTotalEntropy <- sum(aEntropy)/iNrColumn
# according to https://stackoverflow.com/questions/15589601/print-string-and-variable-contents-on-the-same-line-in-r#15589629
cat("Shannon/Information Entropy of the whole data set is:", fTotalEntropy)
# According to the book, it should be 0.96... I do not see, where I am going astray
#
library("entropy")
entropy(dat$Edible, y = NULL, base = 2)
x <- dat$habitat
xtab <- table(x)
pvect <- xtab/sum(xtab)
sum(-pvect*log2(pvect))
# ----------------------------------------------
# Redoing Fig 3-7 and onwards of the book
# X = percentage of data in the set
# Y = entropy of the respective value
# Fig 3-7: Gill color, i.e.,
aEntropy[10]
hist(dat[,10])
aGillColorEntropy<- (fMushroomShannonEntropy(dat[,10]))
plot(unique(dat[,10]),aGillColorEntropy)
aX <- unique(dat[,10])
aY <- aGillColorEntropy
# sort values acc. to https://stackoverflow.com/questions/1568511/how-do-i-sort-one-vector-based-on-values-of-another
aY[sort(order(aY)[aX])]
order(aY)
order(aX)
order(y)             #We want to sort by y, so order() gives us the sorting order
order(y)[x]          #looks up the sorting order for each x
sort(order(y)[x])    #sorts by that order
y[sort(order(y)[x])] #converts orders back to numbers from orders
x[order(match(aX,aY))]
# crshes
aY[sort(order(aX)[aY])]
aSortData[,1] <- aX
aSortData[,2] <- aY
?array
?data.frame
# crashes
data.frame
aY[sort(order(aX)[aY])]
aSortData  <- array(dim = iNrColumn)
matrix(1,2)
matrix(5,2)
matrix(5,2,2)
matrix(na,2,2)
matrix(nan,2,2)
matrix([],2,2)
matrix(void,2,2)
matrix(ncol = 30, nrow = 10)
# crashes
data.frame(matrix(ncol = 2, nrow = length(aX)))
# crashes
data.frame(matrix(ncol = 2, nrow = length(aX)), row.names = c("GillColor","Entropy"))
# crashes
data.frame(matrix(ncol = 2, nrow = length(aX)), col.names = c("GillColor","Entropy"))
# crashes
data.frame(matrix(ncol = 2, nrow = length(aX))) #, col.names = c("GillColor","Entropy")
atrix(ncol = 2, nrow = length(aX))) #, col.names = c("GillColor","Entropy")
# aY[sort(order(aX)[aY])]
# aSortData  <- array(dim = iNrColumn)
aSortData[,1] <- aX
aSortData[,2] <- aY
aSortData[,1]
aSortData[1,1]
aSortData
aSortData = data.frame(matrix(ncol = 2, nrow = length(aX))) #, col.names = c("GillColor","Entropy")
aSortData
aSortData[,1] <- aX
aSortData[,2] <- aY
aSortData
plot(aSortData)
order(aSortData)
order(aSortData[,1])
sort(aSortData[,1])
sort(order(aSortData[,1]))
sort(aSortData[,1])
sort(aSortData[,2])
sort(aSortData[,1])
aY[order(aSortData[,1])]
aX[order(aSortData[,2])]
order(aSortData[,2])
aSortData[[order(aSortData[,2]),1]
]
aSortData[order(aSortData[,2]),1]
aSortData[,1] <- aSortData[order(aSortData[,2]),1]
aSortData[,2] <- aSortData[order(aSortData[,2]),2]
aSortData
plot(aSortData)
plot(1:length(aSortData[,1]),aSortData[,2])
plot(1:length(aSortData[,1]),cumsum(aSortData[,2])
)
entropy(dat$Edible, y = NULL, base = 2)
dat$Edible
getwd()
setwd("D:/Programming/05_R/00_Coding/01_Mushrooms1")
setwd
setwd("D:\Programming\05_R\02_OnlineExamples\01_ShirinsplaygRound\01_RedWineKaggle")
setwd("D:/Programming/05_R/02_OnlineExamples/01_ShirinsplaygRound/01_RedWineKaggle")
dir
getwd()
library(readr)
# data wrangling
library(tidyverse)
# ml
library(caret)
# plotting
library(gridExtra)
library(grid)
library(ggridges)
library(ggthemes)
# explaining models
# https://github.com/christophM/iml
library(iml)
# things that had to be installed first
install.packages("tidyverse","caret","gridExtra","ggridges","ggthemes","iml","breakDown","DALEX)
)
""
)
)
# things that had to be installed first
install.packages("tidyverse","caret","gridExtra","ggridges","ggthemes","iml","breakDown","DALEX")
install.packages("caret", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
# things that had to be installed first
install.packages("tidyverse","gridExtra","ggridges","ggthemes")
install.packages("gridExtra", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("iml","breakDown","DALEX")
install.packages("iml")
install.packages("iml", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("iml", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("iml", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("iml", dependencies=TRUE, repos="https://github.com/christophM/iml")
install.packages("mlr")
install.packages("randomForest")
install.packages("gower")
install.packages("remotes")
remotes::install_github("christophM/iml")
# explaining models
# https://github.com/christophM/iml
# install.packages("iml", dependencies=TRUE, repos="https://github.com/christophM/iml")
library(iml)
devtools::install_github("pbiecek/breakDown")
remotes::install_github("pbiecek/breakDown")
# https://pbiecek.github.io/breakDown/
# remotes::install_github("pbiecek/breakDown")
library(breakDown)
install.packages("DALEX")
thub("MI2DataLab/factorMerger")
devtools::install_github("pbiecek/breakDown")
# DALEX package
devtools::install_github("pbiecek/DALEX")
install.packages("devtools")
)
devtools::install_github("pbiecek/breakDown")
# DALEX package
devtools::install_github("pbiecek/DALEX")
# https://pbiecek.github.io/DALEX/
# dependencies
devtools::install_github("MI2DataLab/factorMerger")
library(DALEX)
ls()
as
Rcpp
?Rcpp
version(Rcpp)
version
install.packages("Rcpp", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
remotes::install_github("RcppCore/Rcpp")
install.packages("install.packages("Rcpp")", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("install.packages"Rcpp", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("install.packages("Rcpp"), lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("Rcpp", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("Rcpp", rep = "https://github.com/RcppCore/Rcpp")
# devtools::install_github("MI2DataLab/factorMerger")
# DALEX package
devtools::install_github("pbiecek/DALEX") # had to install the devtools package, too
install.packages("ALEPlot")
install.packages("ALEPlot", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("D:/Users/PCR/Downloads/ALEPlot_1.1.tar.gz", repos = NULL, type = "source", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
# devtools::install_github("MI2DataLab/factorMerger")
# DALEX package
devtools::install_github("pbiecek/DALEX") # had to install the devtools package, too
devtools::install_github("MI2DataLab/factorMerger")
install.packages("D:/Users/PCR/Downloads/Rcpp_0.12.18.tar.gz", repos = NULL, type = "source", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("Rcpp", type = 'source')
install.packages("D:/Users/PCR/Downloads/Rcpp_0.12.18.zip", repos = NULL, type = "win.binary", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
sessionInfo()
# factorMerger needs Rcpp 12.15, on MRAN it is 12.12, on CRAN it is 12.18
# remotes::install_github("RcppCore/Rcpp") # from https://github.com/RcppCore/Rcpp
# install.packages("Rcpp", rep = "https://github.com/RcppCore/Rcpp") # had to manually download the .tar file for Rcpp 0.12.18....
devtools::install_github("MI2DataLab/factorMerger")
packageVersion("Rcpp")
available.packages()
an up
rm(list=ls(all=TRUE))
# setwd
dirname(sys.frame(1)$ofile)
# First section -----
# data wrangling
library(tidyverse)
library(readr)
# ml
library(caret) # manually installed
# plotting
library(gridExtra)
library(grid)
library(ggridges)
library(ggthemes)
theme_set(theme_minimal())
# explaining models
# https://github.com/christophM/iml
# install.packages("iml", dependencies=TRUE, repos="https://github.com/christophM/iml")
# remotes::install_github("christophM/iml") # this worked in the end
library(iml)
# https://pbiecek.github.io/breakDown/
# remotes::install_github("pbiecek/breakDown")
library(breakDown)
# https://pbiecek.github.io/DALEX/
# dependencies
# factorMerger needs Rcpp 12.15, on MRAN it is 12.12, on CRAN it is 12.18
# remotes::install_github("RcppCore/Rcpp") # from https://github.com/RcppCore/Rcpp
# install.packages("Rcpp", rep = "https://github.com/RcppCore/Rcpp") # had to manually download the .tar file for Rcpp 0.12.18....
# devtools::install_github("MI2DataLab/factorMerger")
# DALEX package
# devtools::install_github("pbiecek/DALEX") # had to install the devtools package, too
library(DALEX)
install.packages("tidyverse", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
# data wrangling
library(tidyverse)
install_github("cran/foobarbaz")
?install_github
install.packages("install_github")
remotes::install_github("RcppCore/Rcpp")
install.packages("r-base-dev")
install.packages("Rcpp", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
package_version()
package_version("Rcpp")
package_version(Rcpp)
library Rcpp
install.packages("build-essential", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("r-cran-plyr")
# loading data
wine_data <- read_csv("winequality-red.csv") %>%
mutate(quality = as.factor(ifelse(quality < 6, "qual_low", "qual_high")))
# loading data
wine_data <- read_csv("winequality-red.csv") # %>%
# loading data
wine_data <- read.csv("winequality-red.csv") # %>%
mutate(quality = as.factor(ifelse(quality < 6, "qual_low", "qual_high")))
# loading data
wine_data <- read.csv("winequality-red.csv") %>%
mutate(quality = as.factor(ifelse(quality < 6, "qual_low", "qual_high"))) # change _ to .
wine_data
View(wine_data)
?mutate
??mutate
library(readr)
# ml
library(caret) # manually installed
# plotting
library(gridExtra)
library(grid)
library(ggridges)
install.packages("ggridges", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
library(ggthemes)
install.packages("D:/Users/PCR/Downloads/ggridges_0.5.0.tar.gz", repos = NULL, type = "source", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
library(ggridges)
install.packages("D:/Users/PCR/Downloads/ggthemes_4.0.1.tar.gz", repos = NULL, type = "source", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
library(ggthemes)
install.packages("D:/Users/PCR/Downloads/ggplot2_3.0.0.tar.gz", repos = NULL, type = "source", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
library(ggthemes)
library(ggplot2)
library(ggthemes)
sessionInfo()
detach("package:ggplot2", unload=TRUE)
detach("package:caret", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:ggridges", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
sessionInfo()
# setwd
dirname(sys.frame(1)$ofile)
rm(list=ls(all=TRUE))
# data wrangling
# remotes::install_github("RcppCore/Rcpp")
#
library(tidyverse) # already this needs Rcpp 0.12.15 or higher...
library(readr)
# ml
library(caret) # manually installed
sessionInfo()
install.packages("ggplot2", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
install.packages("D:/Users/PCR/Downloads/ggplot2_3.0.0.tar.gz", repos = NULL, type = "source", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
library("ggplot2")
sessionInfo()
remove.packages("ggplot2")
sessionInfo()
remove.packages("ggplot2")
install.packages("D:/Users/PCR/Downloads/ggplot2_3.0.0.tar.gz", repos = NULL, type = "source", lib="D:/Programs/AnacondaPython/envs/rstudio-1.1.423/lib/R/library")
sessionInfo()
library(ggplot2)
sessionInfo()
# ml
library(caret) # manually installed
sessionInfo()
# data wrangling
# remotes::install_github("RcppCore/Rcpp")
#
library(tidyverse) # already this needs Rcpp 0.12.15 or higher...
remove.packages("Rcpp")
.libpaths()
libpaths
install.packages("libpaths")
Sys.getenv("R_LIBS")
~/R
.libPaths()
myPaths <- c(myPaths, ‘C:/CustomR’)
myPaths <- c(myPaths, "C:/CustomR")
myPaths <- .libPaths()
myPaths <- c(myPaths, "C:/CustomR")
myPaths <- c(myPaths[2], myPaths[1])  # switch them
.libPaths(myPaths)  # reassign them
.libPaths()
rm(list=ls(all=TRUE))
library(ggplot2) # manually load this first to get the right version
# data wrangling
# remotes::install_github("RcppCore/Rcpp")
#
library(tidyverse) # already this needs Rcpp 0.12.15 or higher...
remove.packages("Rcpp")
